name: Publish to SVN

on:
  [push,workflow_dispatch] 


jobs:
  checkout_svn:
    if : github.ref_type == 'tag' 
    runs-on: ubuntu-latest

    env:
      REPO_NAME: ''

    steps:
      - uses: actions/checkout@v2
      - name: Set env variables
        run: |
          REPO_NAME=$(basename $GITHUB_REPOSITORY)

          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$GITHUB_REF_NAME" >> $GITHUB_ENV

      - name: Install SVN
        run: sudo apt-get update && sudo apt-get install -y subversion

      - name: Checkout SVN repository
        run: |
          echo "Checking out SVN repository"
          svn co --username="${{ secrets.SVN_USERNAME }}" --password="${{ secrets.SVN_PASSWORD }}" "${{ secrets.SVN_URL }}" $REPO_NAME
          echo "SVN repository contents:"
          ls -al $REPO_NAME
          echo "Contents of trunk in SVN repository:"
          ls -al $REPO_NAME/trunk/
          echo "Contents of branches in SVN repository:"
          ls -al $REPO_NAME/branches/
          echo "Contents of tags in SVN repository:"
          ls -al $REPO_NAME/tags/
          echo "Contents of assets in SVN repository:"
          ls -al $REPO_NAME/assets/
          echo "Contents of the current directory:"
          ls -al ./

      - name: Copy files to trunk and tag
        run: |
          echo "Removing old files in trunk"
          rm -rf $REPO_NAME/trunk/*
          echo "Copying new files to trunk"
          rsync -av --exclude="$REPO_NAME" --exclude=".git" --exclude=".github/" ./ $REPO_NAME/trunk
          echo "Listing contents of trunk after rsync:"
          ls -al $REPO_NAME/trunk
          echo "Adding new files to SVN"
          svn add $REPO_NAME/trunk/* --auto-props --parents --depth infinity -q --force
          echo "Creating a tag for the release"
          svn copy $REPO_NAME/trunk/ $REPO_NAME/tags/$RELEASE_VERSION
          echo "Committing changes to SVN"
          svn commit --username="${{ secrets.SVN_USERNAME }}" --password="${{ secrets.SVN_PASSWORD }}" -m "Deploying version $RELEASE_VERSION" $REPO_NAME 
          
          